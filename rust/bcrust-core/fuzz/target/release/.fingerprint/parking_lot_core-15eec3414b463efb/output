{"message":"unresolved imports `self::imp`, `crate::thread_parker::ThreadParker`, `crate::thread_parker::ThreadParker`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nPaths in `use` statements are relative to the crate root. To import items\nrelative to the current and parent modules, use the `self::` and `super::`\nprefixes, respectively. Also verify that you didn't misspell the import\nname and that the import exists in the module from where you tried to\nimport it. Example:\n\n```\nuse self::something::Foo; // ok!\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nOr, if you tried to use a module from an external crate, you may have missed\nthe `extern crate` declaration (which is usually placed in the crate root):\n\n```\nextern crate core; // Required to use the `core` crate\n\nuse core::any;\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/thread_parker/mod.rs","byte_start":3224,"byte_end":3227,"line_start":89,"line_end":89,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"pub use self::imp::{thread_yield, ThreadParker, UnparkHandle};","highlight_start":15,"highlight_end":18}],"label":"could not find `imp` in `self`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/parking_lot.rs","byte_start":360,"byte_end":372,"line_start":8,"line_end":8,"column_start":28,"column_end":40,"is_primary":true,"text":[{"text":"use crate::thread_parker::{ThreadParker, ThreadParkerT, UnparkHandleT};","highlight_start":28,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/word_lock.rs","byte_start":391,"byte_end":403,"line_start":9,"line_end":9,"column_start":28,"column_end":40,"is_primary":true,"text":[{"text":"use crate::thread_parker::{ThreadParker, ThreadParkerT, UnparkHandleT};","highlight_start":28,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `self::imp`, `crate::thread_parker::ThreadParker`, `crate::thread_parker::ThreadParker`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/thread_parker/mod.rs:89:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub use self::imp::{thread_yield, ThreadParker, UnparkHandle};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `imp` in `self`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/parking_lot.rs:8:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::thread_parker::{ThreadParker, ThreadParkerT, UnparkHandleT};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/word_lock.rs:9:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::thread_parker::{ThreadParker, ThreadParkerT, UnparkHandleT};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"cannot find macro `__cfg_if_items` in this scope","code":null,"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.2/src/lib.rs","byte_start":1109,"byte_end":1123,"line_start":42,"line_end":42,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        __cfg_if_items! {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/thread_parker/mod.rs","byte_start":2206,"byte_end":3208,"line_start":54,"line_end":87,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"cfg_if! {","highlight_start":1,"highlight_end":10},{"text":"    if #[cfg(all(has_sized_atomics, any(target_os = \"linux\", target_os = \"android\")))] {","highlight_start":1,"highlight_end":89},{"text":"        #[path = \"linux.rs\"]","highlight_start":1,"highlight_end":29},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else if #[cfg(unix)] {","highlight_start":1,"highlight_end":29},{"text":"        #[path = \"unix.rs\"]","highlight_start":1,"highlight_end":28},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else if #[cfg(windows)] {","highlight_start":1,"highlight_end":32},{"text":"        #[path = \"windows/mod.rs\"]","highlight_start":1,"highlight_end":35},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else if #[cfg(all(has_sized_atomics, target_os = \"redox\"))] {","highlight_start":1,"highlight_end":68},{"text":"        #[path = \"redox.rs\"]","highlight_start":1,"highlight_end":29},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else if #[cfg(all(target_env = \"sgx\", target_vendor = \"fortanix\"))] {","highlight_start":1,"highlight_end":76},{"text":"        #[path = \"sgx.rs\"]","highlight_start":1,"highlight_end":27},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else if #[cfg(all(","highlight_start":1,"highlight_end":25},{"text":"        feature = \"nightly\",","highlight_start":1,"highlight_end":29},{"text":"        target_arch = \"wasm32\",","highlight_start":1,"highlight_end":32},{"text":"        target_feature = \"atomics\"","highlight_start":1,"highlight_end":35},{"text":"    ))] {","highlight_start":1,"highlight_end":10},{"text":"        #[path = \"wasm_atomic.rs\"]","highlight_start":1,"highlight_end":35},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else if #[cfg(target_arch = \"wasm32\")] {","highlight_start":1,"highlight_end":47},{"text":"        #[path = \"wasm.rs\"]","highlight_start":1,"highlight_end":28},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else if #[cfg(all(feature = \"nightly\", target_os = \"cloudabi\"))] {","highlight_start":1,"highlight_end":73},{"text":"        #[path = \"cloudabi.rs\"]","highlight_start":1,"highlight_end":32},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        #[path = \"generic.rs\"]","highlight_start":1,"highlight_end":31},{"text":"        mod imp;","highlight_start":1,"highlight_end":17},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cfg_if!","def_site_span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.2/src/lib.rs","byte_start":965,"byte_end":1571,"line_start":36,"line_end":61,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! cfg_if {","highlight_start":1,"highlight_end":1},{"text":"    ($(","highlight_start":1,"highlight_end":1},{"text":"        if #[cfg($($meta:meta),*)] { $($it:item)* }","highlight_start":1,"highlight_end":1},{"text":"    ) else * else {","highlight_start":1,"highlight_end":1},{"text":"        $($it2:item)*","highlight_start":1,"highlight_end":1},{"text":"    }) => {","highlight_start":1,"highlight_end":1},{"text":"        __cfg_if_items! {","highlight_start":1,"highlight_end":1},{"text":"            () ;","highlight_start":1,"highlight_end":1},{"text":"            $( ( ($($meta),*) ($($it)*) ), )*","highlight_start":1,"highlight_end":1},{"text":"            ( () ($($it2)*) ),","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"    };","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":1},{"text":"        if #[cfg($($i_met:meta),*)] { $($i_it:item)* }","highlight_start":1,"highlight_end":1},{"text":"        $(","highlight_start":1,"highlight_end":1},{"text":"            else if #[cfg($($e_met:meta),*)] { $($e_it:item)* }","highlight_start":1,"highlight_end":1},{"text":"        )*","highlight_start":1,"highlight_end":1},{"text":"    ) => {","highlight_start":1,"highlight_end":1},{"text":"        __cfg_if_items! {","highlight_start":1,"highlight_end":1},{"text":"            () ;","highlight_start":1,"highlight_end":1},{"text":"            ( ($($i_met),*) ($($i_it)*) ),","highlight_start":1,"highlight_end":1},{"text":"            $( ( ($($e_met),*) ($($e_it)*) ), )*","highlight_start":1,"highlight_end":1},{"text":"            ( () () ),","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `__cfg_if_items` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.6.1/src/thread_parker/mod.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mcfg_if! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if #[cfg(all(has_sized_atomics, any(target_os = \"linux\", target_os = \"android\")))] {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[path = \"linux.rs\"]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mod imp;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0432`.\u001b[0m\n"}
